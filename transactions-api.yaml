swagger: '2.0'
info:
  title: Bank Argent Transactions API Documentation
  description: API for managing user transactions
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  # Retrieve all transactions for a given month
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Retrieve transactions for the current month
      description: API to fetch all transactions for the current month for the authenticated user.
      parameters:
        - in: query
          name: month
          type: string
          required: true
          description: Month in YYYY-MM format to fetch transactions for that month.
      produces:
        - application/json
      responses:
        '200':
          description: List of current month's transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized - Invalid or missing JWT token
        '500':
          description: Internal server error

    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a new transaction
      description: API to add a new transaction for the authenticated user.
      parameters:
        - in: body
          name: body
          description: Payload to create a new transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionCreate'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid data
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update a transaction
      description: API to update an existing transaction for the authenticated user.
      parameters:
        - in: body
          name: body
          description: Payload to update a transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid data
        '500':
          description: Internal server error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a transaction
      description: API to delete an existing transaction for the authenticated user.
      parameters:
        - in: body
          name: body
          description: Payload to delete a transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionDelete'
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successfully
        '400':
          description: Invalid data
        '500':
          description: Internal server error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  # Definition of the transaction
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      date:
        type: string
        format: date-time
        description: Transaction date
      amount:
        type: number
        format: float
        description: Amount of the transaction
      type:
        type: string
        enum:
          - debit
          - credit
        description: Type of the transaction (debit or credit)
      category:
        type: string
        description: Category of the transaction (e.g., groceries, rent)
      description:
        type: string
        description: Additional details about the transaction

  # Creating a transaction
  TransactionCreate:
    type: object
    properties:
      amount:
        type: number
        format: float
        description: Amount of the transaction
      type:
        type: string
        enum:
          - debit
          - credit
        description: Type of the transaction
      category:
        type: string
        description: Category of the transaction
      description:
        type: string
        description: Description of the transaction

  # Updating a transaction
  TransactionUpdate:
    type: object
    properties:
      id:
        type: string
        description: ID of the transaction to update
      amount:
        type: number
        format: float
        description: Updated amount
      type:
        type: string
        enum:
          - debit
          - credit
        description: Updated type of the transaction
      category:
        type: string
        description: Updated category
      description:
        type: string
        description: Updated description

  # Deleting a transaction
  TransactionDelete:
    type: object
    properties:
      id:
        type: string
        description: ID of the transaction to delete
